name: "Build docker"

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  docker:
    name: Build docker
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'production' || 'staging' }}
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # network=host driver-opt needed to push to local registry
          driver-opts: network=host
      -
        name: Write config file
        run: |
          echo "export default { instagramUsername: '${INSTAGRAM_USERNAME}', portfolioOrigin: '${PORTFOLIO_ORIGIN}', portfolioDdpEndpoint: '${PORTFOLIO_DDP_ENDPOINT}', instaCyborgServerOrigin: '${INSTA_CYBORG_SERVER_ORIGIN}' }" > config/lib/index.ts
        env:
          INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
          PORTFOLIO_ORIGIN: ${{ secrets.PORTFOLIO_ORIGIN }}
          PORTFOLIO_DDP_ENDPOINT: ${{ secrets.PORTFOLIO_DDP_ENDPOINT }}
          INSTA_CYBORG_SERVER_ORIGIN: ${{ secrets.INSTA_CYBORG_SERVER_ORIGIN }}
      -
        name: Generate .dockerignore file
        shell: bash
        run:
          ./.docker/generate-dockerignore.sh
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build base image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/base.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: localhost:5000/insta-cyborg-base:${{vars.DOCKER_TAG}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Build and push server image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/server.Dockerfile
          build-contexts: |
            insta-cyborg-base=docker-image://localhost:5000/insta-cyborg-base:${{vars.DOCKER_TAG}}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/neopostmodern/insta-cyborg-server:${{vars.DOCKER_TAG}}
      -
        name: Build and push bot image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/bot.Dockerfile
          build-contexts: |
            insta-cyborg-base=docker-image://localhost:5000/insta-cyborg-base:${{vars.DOCKER_TAG}}
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/neopostmodern/insta-cyborg-bot:${{vars.DOCKER_TAG}}
      -
        name: Build and push preview image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/preview.Dockerfile
          build-contexts: |
            insta-cyborg-base=docker-image://localhost:5000/insta-cyborg-base:${{vars.DOCKER_TAG}}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/neopostmodern/insta-cyborg-preview:${{vars.DOCKER_TAG}}

  deploy:
    name: Deploy frontend
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/') && 'production' || 'staging' }}
    needs: docker
    steps:
      -
        name: Pull image
        run: docker pull ghcr.io/neopostmodern/insta-cyborg-preview:${{vars.DOCKER_TAG}}
      - name: Extract files
        run: |
          temp_container_id=$(docker create --name preview-temp ghcr.io/neopostmodern/insta-cyborg-preview:${{vars.DOCKER_TAG}})
          docker cp $temp_container_id:/usr/local/apache2/htdocs preview-files
          docker rm preview-temp
        shell: bash
      -
        name: Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: preview-files/
          server-dir: /